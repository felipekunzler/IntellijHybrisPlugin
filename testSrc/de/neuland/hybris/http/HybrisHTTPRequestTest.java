package de.neuland.hybris.http;

import org.junit.Before;
import org.junit.Test;
import static org.junit.Assert.*;

public class HybrisHTTPRequestTest {

    HybrisHTTPRequest HybrisHTTPRequest;

    @Before
    public void setUp() {
        HybrisHTTPRequest = HybrisHTTPRequest.getInstance();
    }

    @Test
    public void shouldGetTheOutputTextFromJSON() {
        assertEquals("org.springframework.security.filterChains\norg.springframework.security.filterChainProxy\norg.springframework.security.web.DefaultSecurityFilterChain#0\norg.springframework.security.web.DefaultSecurityFilterChain#1\norg.springframework.security.web.DefaultSecurityFilterChain#2\norg.springframework.security.web.DefaultSecurityFilterChain#3\norg.springframework.security.web.DefaultSecurityFilterChain#4\norg.springframework.security.web.DefaultSecurityFilterChain#5\norg.springframework.security.web.PortMapperImpl#0\norg.springframework.security.config.authentication.AuthenticationManagerFactoryBean#0\norg.springframework.security.authentication.ProviderManager#0\norg.springframework.security.web.context.HttpSessionSecurityContextRepository#0\norg.springframework.security.web.savedrequest.HttpSessionRequestCache#0\norg.springframework.security.web.access.intercept.FilterSecurityInterceptor#0\norg.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluator#0\norg.springframework.security.authentication.AnonymousAuthenticationProvider#0\norg.springframework.security.authentication.RememberMeAuthenticationProvider#0\norg.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint#0\norg.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter#0\norg.springframework.security.userDetailsServiceFactory\norg.springframework.security.web.DefaultSecurityFilterChain#6\nfixation\naccessDecisionManager\nrememberMeServices\norg.springframework.security.authentication.DefaultAuthenticationEventPublisher#0\norg.springframework.security.authenticationManager\ncoreAuthenticationProvider\ncorePreAuthenticationChecks\ncoreUserDetailsService\norg.springframework.beans.factory.config.CustomScopeConfigurer#0\nlocaleResolver\nhacRedirectFilter\nspringHacFilterChain\nhacDataSourceSwitchingFilter\nhacTransactionTemplate\n", HybrisHTTPRequest.getHybrisConsoleOutput("{\"executionResult\":\"Groovy Rocks!\",\"outputText\":\"org.springframework.security.filterChains\\norg.springframework.security.filterChainProxy\\norg.springframework.security.web.DefaultSecurityFilterChain#0\\norg.springframework.security.web.DefaultSecurityFilterChain#1\\norg.springframework.security.web.DefaultSecurityFilterChain#2\\norg.springframework.security.web.DefaultSecurityFilterChain#3\\norg.springframework.security.web.DefaultSecurityFilterChain#4\\norg.springframework.security.web.DefaultSecurityFilterChain#5\\norg.springframework.security.web.PortMapperImpl#0\\norg.springframework.security.config.authentication.AuthenticationManagerFactoryBean#0\\norg.springframework.security.authentication.ProviderManager#0\\norg.springframework.security.web.context.HttpSessionSecurityContextRepository#0\\norg.springframework.security.web.savedrequest.HttpSessionRequestCache#0\\norg.springframework.security.web.access.intercept.FilterSecurityInterceptor#0\\norg.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluator#0\\norg.springframework.security.authentication.AnonymousAuthenticationProvider#0\\norg.springframework.security.authentication.RememberMeAuthenticationProvider#0\\norg.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint#0\\norg.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter#0\\norg.springframework.security.userDetailsServiceFactory\\norg.springframework.security.web.DefaultSecurityFilterChain#6\\nfixation\\naccessDecisionManager\\nrememberMeServices\\norg.springframework.security.authentication.DefaultAuthenticationEventPublisher#0\\norg.springframework.security.authenticationManager\\ncoreAuthenticationProvider\\ncorePreAuthenticationChecks\\ncoreUserDetailsService\\norg.springframework.beans.factory.config.CustomScopeConfigurer#0\\nlocaleResolver\\nhacRedirectFilter\\nspringHacFilterChain\\nhacDataSourceSwitchingFilter\\nhacTransactionTemplate\\n\",\"stacktraceText\":\"\"}", ServerAnwserTypes.OUTPUT_TEXT));
    }

    @Test
    public void shouldGetTheExecutionResultFromJSON() {
        assertEquals("Groovy Rocks!", HybrisHTTPRequest.getHybrisConsoleOutput("{\"executionResult\":\"Groovy Rocks!\",\"outputText\":\"org.springframework.security.filterChains\\norg.springframework.security.filterChainProxy\\norg.springframework.security.web.DefaultSecurityFilterChain#0\\norg.springframework.security.web.DefaultSecurityFilterChain#1\\norg.springframework.security.web.DefaultSecurityFilterChain#2\\norg.springframework.security.web.DefaultSecurityFilterChain#3\\norg.springframework.security.web.DefaultSecurityFilterChain#4\\norg.springframework.security.web.DefaultSecurityFilterChain#5\\norg.springframework.security.web.PortMapperImpl#0\\norg.springframework.security.config.authentication.AuthenticationManagerFactoryBean#0\\norg.springframework.security.authentication.ProviderManager#0\\norg.springframework.security.web.context.HttpSessionSecurityContextRepository#0\\norg.springframework.security.web.savedrequest.HttpSessionRequestCache#0\\norg.springframework.security.web.access.intercept.FilterSecurityInterceptor#0\\norg.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluator#0\\norg.springframework.security.authentication.AnonymousAuthenticationProvider#0\\norg.springframework.security.authentication.RememberMeAuthenticationProvider#0\\norg.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint#0\\norg.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter#0\\norg.springframework.security.userDetailsServiceFactory\\norg.springframework.security.web.DefaultSecurityFilterChain#6\\nfixation\\naccessDecisionManager\\nrememberMeServices\\norg.springframework.security.authentication.DefaultAuthenticationEventPublisher#0\\norg.springframework.security.authenticationManager\\ncoreAuthenticationProvider\\ncorePreAuthenticationChecks\\ncoreUserDetailsService\\norg.springframework.beans.factory.config.CustomScopeConfigurer#0\\nlocaleResolver\\nhacRedirectFilter\\nspringHacFilterChain\\nhacDataSourceSwitchingFilter\\nhacTransactionTemplate\\n\",\"stacktraceText\":\"\"}", ServerAnwserTypes.EXECUTION_RESULT));
    }

    @Test
    public void shouldGetTheStacktraceResultFromJSON() {
        assertEquals("No", HybrisHTTPRequest.getHybrisConsoleOutput("{\"executionResult\":\"Groovy Rocks!\",\"outputText\":\"org.springframework.security.filterChains\\norg.springframework.security.filterChainProxy\\norg.springframework.security.web.DefaultSecurityFilterChain#0\\norg.springframework.security.web.DefaultSecurityFilterChain#1\\norg.springframework.security.web.DefaultSecurityFilterChain#2\\norg.springframework.security.web.DefaultSecurityFilterChain#3\\norg.springframework.security.web.DefaultSecurityFilterChain#4\\norg.springframework.security.web.DefaultSecurityFilterChain#5\\norg.springframework.security.web.PortMapperImpl#0\\norg.springframework.security.config.authentication.AuthenticationManagerFactoryBean#0\\norg.springframework.security.authentication.ProviderManager#0\\norg.springframework.security.web.context.HttpSessionSecurityContextRepository#0\\norg.springframework.security.web.savedrequest.HttpSessionRequestCache#0\\norg.springframework.security.web.access.intercept.FilterSecurityInterceptor#0\\norg.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluator#0\\norg.springframework.security.authentication.AnonymousAuthenticationProvider#0\\norg.springframework.security.authentication.RememberMeAuthenticationProvider#0\\norg.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint#0\\norg.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter#0\\norg.springframework.security.userDetailsServiceFactory\\norg.springframework.security.web.DefaultSecurityFilterChain#6\\nfixation\\naccessDecisionManager\\nrememberMeServices\\norg.springframework.security.authentication.DefaultAuthenticationEventPublisher#0\\norg.springframework.security.authenticationManager\\ncoreAuthenticationProvider\\ncorePreAuthenticationChecks\\ncoreUserDetailsService\\norg.springframework.beans.factory.config.CustomScopeConfigurer#0\\nlocaleResolver\\nhacRedirectFilter\\nspringHacFilterChain\\nhacDataSourceSwitchingFilter\\nhacTransactionTemplate\\n\",\"stacktraceText\":\"No\"}", ServerAnwserTypes.STACKTRACE_TEXT));
    }

}
